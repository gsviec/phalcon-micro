<?php

/**
 * Followers
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2019-07-26, 07:20:25
 */
class Followers extends \Phalcon\Mvc\Model
{

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var integer
     */
    protected $followerId;

    /**
     *
     * @var integer
     */
    protected $followingId;

    /**
     *
     * @var integer
     */
    protected $createdAt;

    /**
     *
     * @var string
     */
    protected $status;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field followerId
     *
     * @param integer $followerId
     * @return $this
     */
    public function setFollowerId($followerId)
    {
        $this->followerId = $followerId;

        return $this;
    }

    /**
     * Method to set the value of field followingId
     *
     * @param integer $followingId
     * @return $this
     */
    public function setFollowingId($followingId)
    {
        $this->followingId = $followingId;

        return $this;
    }

    /**
     * Method to set the value of field createdAt
     *
     * @param integer $createdAt
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Method to set the value of field status
     *
     * @param string $status
     * @return $this
     */
    public function setStatus($status)
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field followerId
     *
     * @return integer
     */
    public function getFollowerId()
    {
        return $this->followerId;
    }

    /**
     * Returns the value of field followingId
     *
     * @return integer
     */
    public function getFollowingId()
    {
        return $this->followingId;
    }

    /**
     * Returns the value of field createdAt
     *
     * @return integer
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Returns the value of field status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSchema("gsviec");
        $this->setSource("followers");
    }

    /**
     * Returns table name mapped in the model.
     *
     * @return string
     */
    public function getSource()
    {
        return 'followers';
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return Followers[]|Followers|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null)
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return Followers|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'followerId' => 'followerId',
            'followingId' => 'followingId',
            'createdAt' => 'createdAt',
            'status' => 'status'
        ];
    }

    public static function getNumberFollow($id)
    {
        $followerId = Followers::find('followerId = ' .$id );
        $followingId = Followers::find('followingId= ' .$id );

        return ['followerId' => $followingId->count(), 'followingId' => $followerId->count()];
    }
    public static function isFollow($data)
    {
        $parameters = [
            'followerId = ?1 AND followingId = ?2',
            'bind' => [1 => $data['followerId'], 2 => $data['followingId']]
        ];
        $result = Followers::findFirst($parameters);
        if ($result) {
            return $result;
        }
        return false;
    }
    public function beforeValidationOnCreate()
    {
        $this->createdAt = time();
    }

}
